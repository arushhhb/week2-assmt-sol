const express = require("express");
var bodyParser = require("body-parser");
const app = express();
const port = 3000;

app.use(bodyParser.json());

let todos = [];

const generateUniqueId = () => {
  return Date.now().toString(36) + Math.random().toString(36).substr(2, 5);
};

app.post("/todos", (req, res) => {
  const { title, description } = req.body;

  const newTodo = {
    id: generateUniqueId(),
    title,
    description,
  };

  todos.push(newTodo);
  res.status(201).json(newTodo);
});

app.get("/todos", (req, res) => {
  res.json(todos);
});

app.get("/todos/:id", (req, res) => {
  const todoId = req.params.id;
  const foundTodo = todos.find((todo) => todo.id === todoId);
  if (foundTodo) {
    res.json(foundTodo);
  } else {
    res.status(404).json({ error: "Todo not found" });
  }
});

app.put("/todos/:id", (req, res) => {
  const todoId = req.params.id;
  const updatedTodo = req.body;
  const todoIndex = todos.findIndex((todo) => todo.id === todoId);
  if (todoIndex !== -1) {
    todos[todoIndex] = { ...todos[todoIndex], ...updatedTodo };
    res.json({ message: "Todo updated successfully" });
  } else {
    res.status(404).json({ error: "Todo not found" });
  }
});

app.delete("/todos/:id", (req, res) => {
  const todoId = req.params.id;
  const todoIndex = todos.findIndex((todo) => todo.id === todoId);
  if (todoIndex !== -1) {
    todos.splice(todoIndex, 1);
    res.json({ message: "Todo deleted successfully" });
  } else {
    res.status(404).json({ error: "Todo not found" });
  }
});

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`);
});
